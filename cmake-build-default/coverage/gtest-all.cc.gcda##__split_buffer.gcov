        -:    0:Source:/Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/__split_buffer
        -:    0:Graph:/Users/maxbazarov/Documents/Software_testing/ctest/cmake-build-default/tests/googletest/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.gcno
        -:    0:Data:/Users/maxbazarov/Documents/Software_testing/ctest/cmake-build-default/tests/googletest/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// -*- C++ -*-
        -:    2:#ifndef _LIBCPP_SPLIT_BUFFER
        -:    3:#define _LIBCPP_SPLIT_BUFFER
        -:    4:
        -:    5:#include <__config>
        -:    6:#include <type_traits>
        -:    7:#include <algorithm>
        -:    8:
        -:    9:#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
        -:   10:#pragma GCC system_header
        -:   11:#endif
        -:   12:
        -:   13:_LIBCPP_PUSH_MACROS
        -:   14:#include <__undef_macros>
        -:   15:
        -:   16:
        -:   17:_LIBCPP_BEGIN_NAMESPACE_STD
        -:   18:
        -:   19:template <bool>
        -:   20:class __split_buffer_common
        -:   21:{
        -:   22:protected:
        -:   23:    void __throw_length_error() const;
        -:   24:    void __throw_out_of_range() const;
        -:   25:};
        -:   26:
        -:   27:template <class _Tp, class _Allocator = allocator<_Tp> >
        -:   28:struct __split_buffer
        -:   29:    : private __split_buffer_common<true>
        -:   30:{
        -:   31:private:
        -:   32:    __split_buffer(const __split_buffer&);
        -:   33:    __split_buffer& operator=(const __split_buffer&);
        -:   34:public:
        -:   35:    typedef _Tp                                             value_type;
        -:   36:    typedef _Allocator                                      allocator_type;
        -:   37:    typedef typename remove_reference<allocator_type>::type __alloc_rr;
        -:   38:    typedef allocator_traits<__alloc_rr>                    __alloc_traits;
        -:   39:    typedef value_type&                                     reference;
        -:   40:    typedef const value_type&                               const_reference;
        -:   41:    typedef typename __alloc_traits::size_type              size_type;
        -:   42:    typedef typename __alloc_traits::difference_type        difference_type;
        -:   43:    typedef typename __alloc_traits::pointer                pointer;
        -:   44:    typedef typename __alloc_traits::const_pointer          const_pointer;
        -:   45:    typedef pointer                                         iterator;
        -:   46:    typedef const_pointer                                   const_iterator;
        -:   47:
        -:   48:    pointer                                         __first_;
        -:   49:    pointer                                         __begin_;
        -:   50:    pointer                                         __end_;
        -:   51:    __compressed_pair<pointer, allocator_type> __end_cap_;
        -:   52:
        -:   53:    typedef typename add_lvalue_reference<allocator_type>::type __alloc_ref;
        -:   54:    typedef typename add_lvalue_reference<allocator_type>::type __alloc_const_ref;
        -:   55:
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE7__allocEv called 36 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE7__allocEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEE7__allocEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEE7__allocEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEE7__allocEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEE7__allocEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEE7__allocEv called 17 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE7__allocEv called 25 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEE7__allocEv called 1 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEE7__allocEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEE7__allocEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE7__allocEv called 8 returned 100% blocks executed 100%
       87:   56:    _LIBCPP_INLINE_VISIBILITY __alloc_rr&           __alloc() _NOEXCEPT         {return __end_cap_.second();}
       36:   56-block  0
    $$$$$:   56-block  1
    $$$$$:   56-block  2
    $$$$$:   56-block  3
    $$$$$:   56-block  4
    $$$$$:   56-block  5
       17:   56-block  6
       25:   56-block  7
        1:   56-block  8
    $$$$$:   56-block  9
    $$$$$:   56-block 10
        8:   56-block 11
        -:   57:    _LIBCPP_INLINE_VISIBILITY const __alloc_rr&     __alloc() const _NOEXCEPT   {return __end_cap_.second();}
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE9__end_capEv called 42 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEE9__end_capEv called 16 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE9__end_capEv called 22 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEE9__end_capEv called 2 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE9__end_capEv called 6 returned 100% blocks executed 100%
       88:   58:    _LIBCPP_INLINE_VISIBILITY pointer&              __end_cap() _NOEXCEPT       {return __end_cap_.first();}
       42:   58-block  0
    $$$$$:   58-block  1
    $$$$$:   58-block  2
    $$$$$:   58-block  3
    $$$$$:   58-block  4
    $$$$$:   58-block  5
       16:   58-block  6
       22:   58-block  7
        2:   58-block  8
    $$$$$:   58-block  9
    $$$$$:   58-block 10
        6:   58-block 11
function _ZNKSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE9__end_capEv called 7 returned 100% blocks executed 100%
function _ZNKSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferImRNS_9allocatorImEEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEE9__end_capEv called 4 returned 100% blocks executed 100%
function _ZNKSt3__114__split_bufferIiRNS_9allocatorIiEEE9__end_capEv called 6 returned 100% blocks executed 100%
function _ZNKSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEE9__end_capEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE9__end_capEv called 2 returned 100% blocks executed 100%
       19:   59:    _LIBCPP_INLINE_VISIBILITY const pointer&        __end_cap() const _NOEXCEPT {return __end_cap_.first();}
        7:   59-block  0
    $$$$$:   59-block  1
    $$$$$:   59-block  2
    $$$$$:   59-block  3
    $$$$$:   59-block  4
    $$$$$:   59-block  5
        4:   59-block  6
        6:   59-block  7
    $$$$$:   59-block  8
    $$$$$:   59-block  9
    $$$$$:   59-block 10
        2:   59-block 11
        -:   60:
        -:   61:    _LIBCPP_INLINE_VISIBILITY
        -:   62:    __split_buffer()
        -:   63:        _NOEXCEPT_(is_nothrow_default_constructible<allocator_type>::value);
        -:   64:    _LIBCPP_INLINE_VISIBILITY
        -:   65:    explicit __split_buffer(__alloc_rr& __a);
        -:   66:    _LIBCPP_INLINE_VISIBILITY
        -:   67:    explicit __split_buffer(const __alloc_rr& __a);
        -:   68:    __split_buffer(size_type __cap, size_type __start, __alloc_rr& __a);
        -:   69:    ~__split_buffer();
        -:   70:
        -:   71:    __split_buffer(__split_buffer&& __c)
        -:   72:        _NOEXCEPT_(is_nothrow_move_constructible<allocator_type>::value);
        -:   73:    __split_buffer(__split_buffer&& __c, const __alloc_rr& __a);
        -:   74:    __split_buffer& operator=(__split_buffer&& __c)
        -:   75:        _NOEXCEPT_((__alloc_traits::propagate_on_container_move_assignment::value &&
        -:   76:                is_nothrow_move_assignable<allocator_type>::value) ||
        -:   77:               !__alloc_traits::propagate_on_container_move_assignment::value);
        -:   78:
        -:   79:    _LIBCPP_INLINE_VISIBILITY       iterator begin() _NOEXCEPT       {return __begin_;}
        -:   80:    _LIBCPP_INLINE_VISIBILITY const_iterator begin() const _NOEXCEPT {return __begin_;}
        -:   81:    _LIBCPP_INLINE_VISIBILITY       iterator end() _NOEXCEPT         {return __end_;}
        -:   82:    _LIBCPP_INLINE_VISIBILITY const_iterator end() const _NOEXCEPT   {return __end_;}
        -:   83:
        -:   84:    _LIBCPP_INLINE_VISIBILITY
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE5clearEv called 21 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEE5clearEv called 8 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE5clearEv called 11 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEE5clearEv called 1 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEE5clearEv called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE5clearEv called 3 returned 100% blocks executed 100%
       44:   85:    void clear() _NOEXCEPT
       44:   86:        {__destruct_at_end(__begin_);}
       21:   86-block  0
    $$$$$:   86-block  1
    $$$$$:   86-block  2
    $$$$$:   86-block  3
    $$$$$:   86-block  4
    $$$$$:   86-block  5
        8:   86-block  6
       11:   86-block  7
        1:   86-block  8
    $$$$$:   86-block  9
    $$$$$:   86-block 10
        3:   86-block 11
        -:   87:    _LIBCPP_INLINE_VISIBILITY size_type size() const {return static_cast<size_type>(__end_ - __begin_);}
        -:   88:    _LIBCPP_INLINE_VISIBILITY bool empty()     const {return __end_ == __begin_;}
function _ZNKSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE8capacityEv called 7 returned 100% blocks executed 100%
function _ZNKSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE8capacityEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEE8capacityEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferImRNS_9allocatorImEEE8capacityEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEE8capacityEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEE8capacityEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEE8capacityEv called 4 returned 100% blocks executed 100%
function _ZNKSt3__114__split_bufferIiRNS_9allocatorIiEEE8capacityEv called 6 returned 100% blocks executed 100%
function _ZNKSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEE8capacityEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEE8capacityEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEE8capacityEv called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE8capacityEv called 2 returned 100% blocks executed 100%
       19:   89:    _LIBCPP_INLINE_VISIBILITY size_type capacity() const {return static_cast<size_type>(__end_cap() - __first_);}
        7:   89-block  0
    $$$$$:   89-block  1
    $$$$$:   89-block  2
    $$$$$:   89-block  3
    $$$$$:   89-block  4
    $$$$$:   89-block  5
        4:   89-block  6
        6:   89-block  7
    $$$$$:   89-block  8
    $$$$$:   89-block  9
    $$$$$:   89-block 10
        2:   89-block 11
        -:   90:    _LIBCPP_INLINE_VISIBILITY size_type __front_spare() const {return static_cast<size_type>(__begin_ - __first_);}
        -:   91:    _LIBCPP_INLINE_VISIBILITY size_type __back_spare() const {return static_cast<size_type>(__end_cap() - __end_);}
        -:   92:
        -:   93:    _LIBCPP_INLINE_VISIBILITY       reference front()       {return *__begin_;}
        -:   94:    _LIBCPP_INLINE_VISIBILITY const_reference front() const {return *__begin_;}
        -:   95:    _LIBCPP_INLINE_VISIBILITY       reference back()        {return *(__end_ - 1);}
        -:   96:    _LIBCPP_INLINE_VISIBILITY const_reference back() const  {return *(__end_ - 1);}
        -:   97:
        -:   98:    void reserve(size_type __n);
        -:   99:    void shrink_to_fit() _NOEXCEPT;
        -:  100:    void push_front(const_reference __x);
        -:  101:    _LIBCPP_INLINE_VISIBILITY void push_back(const_reference __x);
        -:  102:    void push_front(value_type&& __x);
        -:  103:    void push_back(value_type&& __x);
        -:  104:    template <class... _Args>
        -:  105:        void emplace_back(_Args&&... __args);
        -:  106:
        -:  107:    _LIBCPP_INLINE_VISIBILITY void pop_front() {__destruct_at_begin(__begin_+1);}
        -:  108:    _LIBCPP_INLINE_VISIBILITY void pop_back() {__destruct_at_end(__end_-1);}
        -:  109:
        -:  110:    void __construct_at_end(size_type __n);
        -:  111:    void __construct_at_end(size_type __n, const_reference __x);
        -:  112:    template <class _InputIter>
        -:  113:        typename enable_if
        -:  114:        <
        -:  115:            __is_cpp17_input_iterator<_InputIter>::value &&
        -:  116:           !__is_cpp17_forward_iterator<_InputIter>::value,
        -:  117:            void
        -:  118:        >::type
        -:  119:        __construct_at_end(_InputIter __first, _InputIter __last);
        -:  120:    template <class _ForwardIterator>
        -:  121:        typename enable_if
        -:  122:        <
        -:  123:            __is_cpp17_forward_iterator<_ForwardIterator>::value,
        -:  124:            void
        -:  125:        >::type
        -:  126:        __construct_at_end(_ForwardIterator __first, _ForwardIterator __last);
        -:  127:
        -:  128:    _LIBCPP_INLINE_VISIBILITY void __destruct_at_begin(pointer __new_begin)
        -:  129:        {__destruct_at_begin(__new_begin, is_trivially_destructible<value_type>());}
        -:  130:        _LIBCPP_INLINE_VISIBILITY
        -:  131:        void __destruct_at_begin(pointer __new_begin, false_type);
        -:  132:        _LIBCPP_INLINE_VISIBILITY
        -:  133:        void __destruct_at_begin(pointer __new_begin, true_type);
        -:  134:
        -:  135:    _LIBCPP_INLINE_VISIBILITY
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE17__destruct_at_endEPS6_ called 21 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE17__destruct_at_endEPS1_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEE17__destruct_at_endEPS4_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEE17__destruct_at_endEPm called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEE17__destruct_at_endEPS2_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEE17__destruct_at_endEPS2_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEE17__destruct_at_endEPS3_ called 8 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE17__destruct_at_endEPi called 11 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEE17__destruct_at_endEPS3_ called 1 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEE17__destruct_at_endEPS3_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEE17__destruct_at_endEPS3_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE17__destruct_at_endEPS3_ called 3 returned 100% blocks executed 100%
       44:  136:    void __destruct_at_end(pointer __new_last) _NOEXCEPT
       44:  137:        {__destruct_at_end(__new_last, false_type());}
       21:  137-block  0
    $$$$$:  137-block  1
    $$$$$:  137-block  2
    $$$$$:  137-block  3
    $$$$$:  137-block  4
    $$$$$:  137-block  5
        8:  137-block  6
       11:  137-block  7
        1:  137-block  8
    $$$$$:  137-block  9
    $$$$$:  137-block 10
        3:  137-block 11
        -:  138:    _LIBCPP_INLINE_VISIBILITY
        -:  139:        void __destruct_at_end(pointer __new_last, false_type) _NOEXCEPT;
        -:  140:    _LIBCPP_INLINE_VISIBILITY
        -:  141:        void __destruct_at_end(pointer __new_last, true_type) _NOEXCEPT;
        -:  142:
        -:  143:    void swap(__split_buffer& __x)
        -:  144:        _NOEXCEPT_(!__alloc_traits::propagate_on_container_swap::value||
        -:  145:                   __is_nothrow_swappable<__alloc_rr>::value);
        -:  146:
        -:  147:    bool __invariants() const;
        -:  148:
        -:  149:private:
        -:  150:    _LIBCPP_INLINE_VISIBILITY
        -:  151:    void __move_assign_alloc(__split_buffer& __c, true_type)
        -:  152:        _NOEXCEPT_(is_nothrow_move_assignable<allocator_type>::value)
        -:  153:        {
        -:  154:            __alloc() = _VSTD::move(__c.__alloc());
        -:  155:        }
        -:  156:
        -:  157:    _LIBCPP_INLINE_VISIBILITY
        -:  158:    void __move_assign_alloc(__split_buffer&, false_type) _NOEXCEPT
        -:  159:        {}
        -:  160:
        -:  161:    struct _ConstructTransaction {
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE21_ConstructTransactionC1EPPS6_m called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE21_ConstructTransactionC2EPPS6_m called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE21_ConstructTransactionC1EPPS1_m called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE21_ConstructTransactionC2EPPS1_m called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE21_ConstructTransactionC1EPPS3_m called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE21_ConstructTransactionC2EPPS3_m called 0 returned 0% blocks executed 0%
    #####:  162:      explicit _ConstructTransaction(pointer* __p, size_type __n) _NOEXCEPT
    #####:  163:      : __pos_(*__p), __end_(*__p + __n), __dest_(__p) {
    #####:  164:      }
    $$$$$:  164-block  0
    $$$$$:  164-block  1
    $$$$$:  164-block  2
    $$$$$:  164-block  3
    $$$$$:  164-block  4
    $$$$$:  164-block  5
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE21_ConstructTransactionD1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE21_ConstructTransactionD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE21_ConstructTransactionD1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE21_ConstructTransactionD2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE21_ConstructTransactionD1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE21_ConstructTransactionD2Ev called 0 returned 0% blocks executed 0%
    #####:  165:      ~_ConstructTransaction() {
    #####:  166:        *__dest_ = __pos_;
    #####:  167:      }
    $$$$$:  167-block  0
    $$$$$:  167-block  1
    $$$$$:  167-block  2
    $$$$$:  167-block  3
    $$$$$:  167-block  4
    $$$$$:  167-block  5
        -:  168:      pointer __pos_;
        -:  169:     const pointer __end_;
        -:  170:    private:
        -:  171:     pointer *__dest_;
        -:  172:    };
        -:  173:};
        -:  174:
        -:  175:template <class _Tp, class _Allocator>
        -:  176:bool
        -:  177:__split_buffer<_Tp, _Allocator>::__invariants() const
        -:  178:{
        -:  179:    if (__first_ == nullptr)
        -:  180:    {
        -:  181:        if (__begin_ != nullptr)
        -:  182:            return false;
        -:  183:        if (__end_ != nullptr)
        -:  184:            return false;
        -:  185:        if (__end_cap() != nullptr)
        -:  186:            return false;
        -:  187:    }
        -:  188:    else
        -:  189:    {
        -:  190:        if (__begin_ < __first_)
        -:  191:            return false;
        -:  192:        if (__end_ < __begin_)
        -:  193:            return false;
        -:  194:        if (__end_cap() < __end_)
        -:  195:            return false;
        -:  196:    }
        -:  197:    return true;
        -:  198:}
        -:  199:
        -:  200://  Default constructs __n objects starting at __end_
        -:  201://  throws if construction throws
        -:  202://  Precondition:  __n > 0
        -:  203://  Precondition:  size() + __n <= capacity()
        -:  204://  Postcondition:  size() == size() + __n
        -:  205:template <class _Tp, class _Allocator>
        -:  206:void
        -:  207:__split_buffer<_Tp, _Allocator>::__construct_at_end(size_type __n)
        -:  208:{
        -:  209:    _ConstructTransaction __tx(&this->__end_, __n);
        -:  210:    for (; __tx.__pos_ != __tx.__end_; ++__tx.__pos_) {
        -:  211:        __alloc_traits::construct(this->__alloc(), _VSTD::__to_address(__tx.__pos_));
        -:  212:    }
        -:  213:}
        -:  214:
        -:  215://  Copy constructs __n objects starting at __end_ from __x
        -:  216://  throws if construction throws
        -:  217://  Precondition:  __n > 0
        -:  218://  Precondition:  size() + __n <= capacity()
        -:  219://  Postcondition:  size() == old size() + __n
        -:  220://  Postcondition:  [i] == __x for all i in [size() - __n, __n)
        -:  221:template <class _Tp, class _Allocator>
        -:  222:void
        -:  223:__split_buffer<_Tp, _Allocator>::__construct_at_end(size_type __n, const_reference __x)
        -:  224:{
        -:  225:    _ConstructTransaction __tx(&this->__end_, __n);
        -:  226:    for (; __tx.__pos_ != __tx.__end_; ++__tx.__pos_) {
        -:  227:        __alloc_traits::construct(this->__alloc(),
        -:  228:            _VSTD::__to_address(__tx.__pos_), __x);
        -:  229:    }
        -:  230:}
        -:  231:
        -:  232:template <class _Tp, class _Allocator>
        -:  233:template <class _InputIter>
        -:  234:typename enable_if
        -:  235:<
        -:  236:     __is_cpp17_input_iterator<_InputIter>::value &&
        -:  237:    !__is_cpp17_forward_iterator<_InputIter>::value,
        -:  238:    void
        -:  239:>::type
        -:  240:__split_buffer<_Tp, _Allocator>::__construct_at_end(_InputIter __first, _InputIter __last)
        -:  241:{
        -:  242:    __alloc_rr& __a = this->__alloc();
        -:  243:    for (; __first != __last; ++__first)
        -:  244:    {
        -:  245:        if (__end_ == __end_cap())
        -:  246:        {
        -:  247:            size_type __old_cap = __end_cap() - __first_;
        -:  248:            size_type __new_cap = _VSTD::max<size_type>(2 * __old_cap, 8);
        -:  249:            __split_buffer __buf(__new_cap, 0, __a);
        -:  250:            for (pointer __p = __begin_; __p != __end_; ++__p, ++__buf.__end_)
        -:  251:                __alloc_traits::construct(__buf.__alloc(),
        -:  252:                        _VSTD::__to_address(__buf.__end_), _VSTD::move(*__p));
        -:  253:            swap(__buf);
        -:  254:        }
        -:  255:        __alloc_traits::construct(__a, _VSTD::__to_address(this->__end_), *__first);
        -:  256:        ++this->__end_;
        -:  257:    }
        -:  258:}
        -:  259:
        -:  260:template <class _Tp, class _Allocator>
        -:  261:template <class _ForwardIterator>
        -:  262:typename enable_if
        -:  263:<
        -:  264:    __is_cpp17_forward_iterator<_ForwardIterator>::value,
        -:  265:    void
        -:  266:>::type
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE18__construct_at_endINS_13move_iteratorIPS6_EEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESF_SF_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE18__construct_at_endINS_13move_iteratorIPS1_EEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESB_SB_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESD_SD_ called 0 returned 0% blocks executed 0%
    #####:  267:__split_buffer<_Tp, _Allocator>::__construct_at_end(_ForwardIterator __first, _ForwardIterator __last)
        -:  268:{
    #####:  269:    _ConstructTransaction __tx(&this->__end_, _VSTD::distance(__first, __last));
    #####:  270:    for (; __tx.__pos_ != __tx.__end_; ++__tx.__pos_, ++__first) {
    $$$$$:  270-block  0
    $$$$$:  270-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  270-block  2
    $$$$$:  270-block  3
    $$$$$:  270-block  4
    $$$$$:  270-block  5
branch  2 never executed
branch  3 never executed
    $$$$$:  270-block  6
    $$$$$:  270-block  7
    $$$$$:  270-block  8
    $$$$$:  270-block  9
branch  4 never executed
branch  5 never executed
    $$$$$:  270-block 10
    $$$$$:  270-block 11
    #####:  271:        __alloc_traits::construct(this->__alloc(),
    $$$$$:  271-block  0
    $$$$$:  271-block  1
    $$$$$:  271-block  2
    #####:  272:            _VSTD::__to_address(__tx.__pos_), *__first);
    $$$$$:  272-block  0
    $$$$$:  272-block  1
    $$$$$:  272-block  2
    #####:  273:    }
    $$$$$:  273-block  0
    $$$$$:  273-block  1
    $$$$$:  273-block  2
    #####:  274:}
    $$$$$:  274-block  0
    $$$$$:  274-block  1
    $$$$$:  274-block  2
    $$$$$:  274-block  3
    $$$$$:  274-block  4
    $$$$$:  274-block  5
    $$$$$:  274-block  6
    $$$$$:  274-block  7
    $$$$$:  274-block  8
        -:  275:
        -:  276:template <class _Tp, class _Allocator>
        -:  277:inline
        -:  278:void
        -:  279:__split_buffer<_Tp, _Allocator>::__destruct_at_begin(pointer __new_begin, false_type)
        -:  280:{
        -:  281:    while (__begin_ != __new_begin)
        -:  282:        __alloc_traits::destroy(__alloc(), _VSTD::__to_address(__begin_++));
        -:  283:}
        -:  284:
        -:  285:template <class _Tp, class _Allocator>
        -:  286:inline
        -:  287:void
        -:  288:__split_buffer<_Tp, _Allocator>::__destruct_at_begin(pointer __new_begin, true_type)
        -:  289:{
        -:  290:    __begin_ = __new_begin;
        -:  291:}
        -:  292:
        -:  293:template <class _Tp, class _Allocator>
        -:  294:inline _LIBCPP_INLINE_VISIBILITY
        -:  295:void
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE17__destruct_at_endEPS6_NS_17integral_constantIbLb0EEE called 21 returned 100% blocks executed 83%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE17__destruct_at_endEPS1_NS_17integral_constantIbLb0EEE called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEE17__destruct_at_endEPS4_NS_17integral_constantIbLb0EEE called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEE17__destruct_at_endEPmNS_17integral_constantIbLb0EEE called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEE17__destruct_at_endEPS2_NS_17integral_constantIbLb0EEE called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEE17__destruct_at_endEPS2_NS_17integral_constantIbLb0EEE called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEE17__destruct_at_endEPS3_NS_17integral_constantIbLb0EEE called 8 returned 100% blocks executed 83%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE17__destruct_at_endEPiNS_17integral_constantIbLb0EEE called 11 returned 100% blocks executed 83%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEE17__destruct_at_endEPS3_NS_17integral_constantIbLb0EEE called 1 returned 100% blocks executed 50%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEE17__destruct_at_endEPS3_NS_17integral_constantIbLb0EEE called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEE17__destruct_at_endEPS3_NS_17integral_constantIbLb0EEE called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE17__destruct_at_endEPS3_NS_17integral_constantIbLb0EEE called 3 returned 100% blocks executed 83%
       44:  296:__split_buffer<_Tp, _Allocator>::__destruct_at_end(pointer __new_last, false_type) _NOEXCEPT
        -:  297:{
       68:  298:    while (__new_last != __end_)
       21:  298-block  0
       29:  298-block  1
branch  0 taken 8
branch  1 taken 21
        8:  298-block  2
    $$$$$:  298-block  3
    $$$$$:  298-block  4
branch  2 never executed
branch  3 never executed
    $$$$$:  298-block  5
    $$$$$:  298-block  6
    $$$$$:  298-block  7
branch  4 never executed
branch  5 never executed
    $$$$$:  298-block  8
    $$$$$:  298-block  9
    $$$$$:  298-block 10
branch  6 never executed
branch  7 never executed
    $$$$$:  298-block 11
    $$$$$:  298-block 12
    $$$$$:  298-block 13
branch  8 never executed
branch  9 never executed
    $$$$$:  298-block 14
    $$$$$:  298-block 15
    $$$$$:  298-block 16
branch 10 never executed
branch 11 never executed
    $$$$$:  298-block 17
        8:  298-block 18
       13:  298-block 19
branch 12 taken 5
branch 13 taken 8
        5:  298-block 20
       11:  298-block 21
       19:  298-block 22
branch 14 taken 8
branch 15 taken 11
        8:  298-block 23
        1:  298-block 24
        1:  298-block 25
branch 16 taken 0
branch 17 taken 1
    $$$$$:  298-block 26
    $$$$$:  298-block 27
    $$$$$:  298-block 28
branch 18 never executed
branch 19 never executed
    $$$$$:  298-block 29
    $$$$$:  298-block 30
    $$$$$:  298-block 31
branch 20 never executed
branch 21 never executed
    $$$$$:  298-block 32
        3:  298-block 33
        6:  298-block 34
branch 22 taken 3
branch 23 taken 3
        3:  298-block 35
       24:  299:        __alloc_traits::destroy(__alloc(), _VSTD::__to_address(--__end_));
        8:  299-block  0
branch  0 taken 8
branch  1 taken 0
    $$$$$:  299-block  1
    $$$$$:  299-block  2
branch  2 never executed
branch  3 never executed
    $$$$$:  299-block  3
    $$$$$:  299-block  4
branch  4 never executed
branch  5 never executed
    $$$$$:  299-block  5
    $$$$$:  299-block  6
branch  6 never executed
branch  7 never executed
    $$$$$:  299-block  7
    $$$$$:  299-block  8
branch  8 never executed
branch  9 never executed
    $$$$$:  299-block  9
    $$$$$:  299-block 10
branch 10 never executed
branch 11 never executed
    $$$$$:  299-block 11
        5:  299-block 12
branch 12 taken 5
branch 13 taken 0
    $$$$$:  299-block 13
        8:  299-block 14
branch 14 taken 8
branch 15 taken 0
    $$$$$:  299-block 15
    $$$$$:  299-block 16
branch 16 never executed
branch 17 never executed
    $$$$$:  299-block 17
    $$$$$:  299-block 18
branch 18 never executed
branch 19 never executed
    $$$$$:  299-block 19
    $$$$$:  299-block 20
branch 20 never executed
branch 21 never executed
    $$$$$:  299-block 21
        3:  299-block 22
branch 22 taken 3
branch 23 taken 0
    $$$$$:  299-block 23
       44:  300:}
       21:  300-block  0
    $$$$$:  300-block  1
    $$$$$:  300-block  2
    $$$$$:  300-block  3
    $$$$$:  300-block  4
    $$$$$:  300-block  5
        8:  300-block  6
       11:  300-block  7
        1:  300-block  8
    $$$$$:  300-block  9
    $$$$$:  300-block 10
        3:  300-block 11
        -:  301:
        -:  302:template <class _Tp, class _Allocator>
        -:  303:inline _LIBCPP_INLINE_VISIBILITY
        -:  304:void
        -:  305:__split_buffer<_Tp, _Allocator>::__destruct_at_end(pointer __new_last, true_type) _NOEXCEPT
        -:  306:{
        -:  307:    __end_ = __new_last;
        -:  308:}
        -:  309:
        -:  310:template <class _Tp, class _Allocator>
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEEC1EmmS8_ called 21 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEEC2EmmS8_ called 21 returned 100% blocks executed 75%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEEC1EmmS4_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEEC2EmmS4_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEEC1EmmS7_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEEC2EmmS7_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEEC1EmmS3_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEEC2EmmS3_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEEC1EmmS5_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEEC2EmmS5_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEEC1EmmS5_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEEC2EmmS5_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEEC1EmmS6_ called 8 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEEC2EmmS6_ called 8 returned 100% blocks executed 75%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEEC1EmmS3_ called 11 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_ called 11 returned 100% blocks executed 75%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEEC1EmmS6_ called 1 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEEC2EmmS6_ called 1 returned 100% blocks executed 75%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEEC1EmmS6_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEEC2EmmS6_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEEC1EmmS6_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEEC2EmmS6_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEEC1EmmS6_ called 3 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEEC2EmmS6_ called 3 returned 100% blocks executed 75%
       88:  311:__split_buffer<_Tp, _Allocator>::__split_buffer(size_type __cap, size_type __start, __alloc_rr& __a)
       44:  312:    : __end_cap_(nullptr, __a)
       88:  313:{
       44:  314:    __first_ = __cap != 0 ? __alloc_traits::allocate(__alloc(), __cap) : nullptr;
       21:  314-block  0
branch  0 taken 21
branch  1 taken 0
       21:  314-block  1
    $$$$$:  314-block  2
    $$$$$:  314-block  3
branch  2 never executed
branch  3 never executed
    $$$$$:  314-block  4
    $$$$$:  314-block  5
    $$$$$:  314-block  6
branch  4 never executed
branch  5 never executed
    $$$$$:  314-block  7
    $$$$$:  314-block  8
    $$$$$:  314-block  9
branch  6 never executed
branch  7 never executed
    $$$$$:  314-block 10
    $$$$$:  314-block 11
    $$$$$:  314-block 12
branch  8 never executed
branch  9 never executed
    $$$$$:  314-block 13
    $$$$$:  314-block 14
    $$$$$:  314-block 15
branch 10 never executed
branch 11 never executed
    $$$$$:  314-block 16
    $$$$$:  314-block 17
        8:  314-block 18
branch 12 taken 8
branch 13 taken 0
        8:  314-block 19
    $$$$$:  314-block 20
       11:  314-block 21
branch 14 taken 11
branch 15 taken 0
       11:  314-block 22
    $$$$$:  314-block 23
        1:  314-block 24
branch 16 taken 1
branch 17 taken 0
        1:  314-block 25
    $$$$$:  314-block 26
    $$$$$:  314-block 27
branch 18 never executed
branch 19 never executed
    $$$$$:  314-block 28
    $$$$$:  314-block 29
    $$$$$:  314-block 30
branch 20 never executed
branch 21 never executed
    $$$$$:  314-block 31
    $$$$$:  314-block 32
        3:  314-block 33
branch 22 taken 3
branch 23 taken 0
        3:  314-block 34
    $$$$$:  314-block 35
       44:  315:    __begin_ = __end_ = __first_ + __start;
       44:  316:    __end_cap() = __first_ + __cap;
       88:  317:}
       21:  317-block  0
       21:  317-block  1
    $$$$$:  317-block  2
    $$$$$:  317-block  3
    $$$$$:  317-block  4
    $$$$$:  317-block  5
    $$$$$:  317-block  6
    $$$$$:  317-block  7
    $$$$$:  317-block  8
    $$$$$:  317-block  9
    $$$$$:  317-block 10
    $$$$$:  317-block 11
        8:  317-block 12
        8:  317-block 13
       11:  317-block 14
       11:  317-block 15
        1:  317-block 16
        1:  317-block 17
    $$$$$:  317-block 18
    $$$$$:  317-block 19
    $$$$$:  317-block 20
    $$$$$:  317-block 21
        3:  317-block 22
        3:  317-block 23
        -:  318:
        -:  319:template <class _Tp, class _Allocator>
        -:  320:inline
        -:  321:__split_buffer<_Tp, _Allocator>::__split_buffer()
        -:  322:    _NOEXCEPT_(is_nothrow_default_constructible<allocator_type>::value)
        -:  323:    : __first_(nullptr), __begin_(nullptr), __end_(nullptr), __end_cap_(nullptr, __default_init_tag())
        -:  324:{
        -:  325:}
        -:  326:
        -:  327:template <class _Tp, class _Allocator>
        -:  328:inline
        -:  329:__split_buffer<_Tp, _Allocator>::__split_buffer(__alloc_rr& __a)
        -:  330:    : __first_(nullptr), __begin_(nullptr), __end_(nullptr), __end_cap_(nullptr, __a)
        -:  331:{
        -:  332:}
        -:  333:
        -:  334:template <class _Tp, class _Allocator>
        -:  335:inline
        -:  336:__split_buffer<_Tp, _Allocator>::__split_buffer(const __alloc_rr& __a)
        -:  337:    : __first_(nullptr), __begin_(nullptr), __end_(nullptr), __end_cap_(nullptr, __a)
        -:  338:{
        -:  339:}
        -:  340:
        -:  341:template <class _Tp, class _Allocator>
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEED1Ev called 21 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEED2Ev called 21 returned 100% blocks executed 83%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEED1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEED1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEED1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEED1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEED1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEED1Ev called 8 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEED2Ev called 8 returned 100% blocks executed 83%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEED1Ev called 11 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEED2Ev called 11 returned 100% blocks executed 83%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEED1Ev called 1 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEED2Ev called 1 returned 100% blocks executed 33%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEED1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEED1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEED1Ev called 3 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEED2Ev called 3 returned 100% blocks executed 83%
       88:  342:__split_buffer<_Tp, _Allocator>::~__split_buffer()
       44:  343:{
       44:  344:    clear();
       44:  345:    if (__first_)
        7:  345-block  0
       14:  345-block  1
    $$$$$:  345-block  2
    $$$$$:  345-block  3
    $$$$$:  345-block  4
    $$$$$:  345-block  5
    $$$$$:  345-block  6
    $$$$$:  345-block  7
    $$$$$:  345-block  8
    $$$$$:  345-block  9
    $$$$$:  345-block 10
    $$$$$:  345-block 11
        4:  345-block 12
        4:  345-block 13
        6:  345-block 14
        5:  345-block 15
    $$$$$:  345-block 16
        1:  345-block 17
    $$$$$:  345-block 18
    $$$$$:  345-block 19
    $$$$$:  345-block 20
    $$$$$:  345-block 21
        2:  345-block 22
        1:  345-block 23
       19:  346:        __alloc_traits::deallocate(__alloc(), __first_, capacity());
        7:  346-block  0
branch  0 taken 7
branch  1 taken 0
        7:  346-block  1
    $$$$$:  346-block  2
    $$$$$:  346-block  3
branch  2 never executed
branch  3 never executed
    $$$$$:  346-block  4
    $$$$$:  346-block  5
    $$$$$:  346-block  6
branch  4 never executed
branch  5 never executed
    $$$$$:  346-block  7
    $$$$$:  346-block  8
    $$$$$:  346-block  9
branch  6 never executed
branch  7 never executed
    $$$$$:  346-block 10
    $$$$$:  346-block 11
    $$$$$:  346-block 12
branch  8 never executed
branch  9 never executed
    $$$$$:  346-block 13
    $$$$$:  346-block 14
    $$$$$:  346-block 15
branch 10 never executed
branch 11 never executed
    $$$$$:  346-block 16
    $$$$$:  346-block 17
        4:  346-block 18
branch 12 taken 4
branch 13 taken 0
        4:  346-block 19
    $$$$$:  346-block 20
        6:  346-block 21
branch 14 taken 6
branch 15 taken 0
        6:  346-block 22
    $$$$$:  346-block 23
    $$$$$:  346-block 24
branch 16 never executed
branch 17 never executed
    $$$$$:  346-block 25
    $$$$$:  346-block 26
    $$$$$:  346-block 27
branch 18 never executed
branch 19 never executed
    $$$$$:  346-block 28
    $$$$$:  346-block 29
    $$$$$:  346-block 30
branch 20 never executed
branch 21 never executed
    $$$$$:  346-block 31
    $$$$$:  346-block 32
        2:  346-block 33
branch 22 taken 2
branch 23 taken 0
        2:  346-block 34
    $$$$$:  346-block 35
       88:  347:}
       21:  347-block  0
       21:  347-block  1
    $$$$$:  347-block  2
    $$$$$:  347-block  3
    $$$$$:  347-block  4
    $$$$$:  347-block  5
    $$$$$:  347-block  6
    $$$$$:  347-block  7
    $$$$$:  347-block  8
    $$$$$:  347-block  9
    $$$$$:  347-block 10
    $$$$$:  347-block 11
        8:  347-block 12
        8:  347-block 13
       11:  347-block 14
       11:  347-block 15
        1:  347-block 16
        1:  347-block 17
    $$$$$:  347-block 18
    $$$$$:  347-block 19
    $$$$$:  347-block 20
    $$$$$:  347-block 21
        3:  347-block 22
        3:  347-block 23
        -:  348:
        -:  349:template <class _Tp, class _Allocator>
        -:  350:__split_buffer<_Tp, _Allocator>::__split_buffer(__split_buffer&& __c)
        -:  351:    _NOEXCEPT_(is_nothrow_move_constructible<allocator_type>::value)
        -:  352:    : __first_(_VSTD::move(__c.__first_)),
        -:  353:      __begin_(_VSTD::move(__c.__begin_)),
        -:  354:      __end_(_VSTD::move(__c.__end_)),
        -:  355:      __end_cap_(_VSTD::move(__c.__end_cap_))
        -:  356:{
        -:  357:    __c.__first_ = nullptr;
        -:  358:    __c.__begin_ = nullptr;
        -:  359:    __c.__end_ = nullptr;
        -:  360:    __c.__end_cap() = nullptr;
        -:  361:}
        -:  362:
        -:  363:template <class _Tp, class _Allocator>
        -:  364:__split_buffer<_Tp, _Allocator>::__split_buffer(__split_buffer&& __c, const __alloc_rr& __a)
        -:  365:    : __end_cap_(nullptr, __a)
        -:  366:{
        -:  367:    if (__a == __c.__alloc())
        -:  368:    {
        -:  369:        __first_ = __c.__first_;
        -:  370:        __begin_ = __c.__begin_;
        -:  371:        __end_ = __c.__end_;
        -:  372:        __end_cap() = __c.__end_cap();
        -:  373:        __c.__first_ = nullptr;
        -:  374:        __c.__begin_ = nullptr;
        -:  375:        __c.__end_ = nullptr;
        -:  376:        __c.__end_cap() = nullptr;
        -:  377:    }
        -:  378:    else
        -:  379:    {
        -:  380:        size_type __cap = __c.size();
        -:  381:        __first_ = __alloc_traits::allocate(__alloc(), __cap);
        -:  382:        __begin_ = __end_ = __first_;
        -:  383:        __end_cap() = __first_ + __cap;
        -:  384:        typedef move_iterator<iterator> _Ip;
        -:  385:        __construct_at_end(_Ip(__c.begin()), _Ip(__c.end()));
        -:  386:    }
        -:  387:}
        -:  388:
        -:  389:template <class _Tp, class _Allocator>
        -:  390:__split_buffer<_Tp, _Allocator>&
        -:  391:__split_buffer<_Tp, _Allocator>::operator=(__split_buffer&& __c)
        -:  392:    _NOEXCEPT_((__alloc_traits::propagate_on_container_move_assignment::value &&
        -:  393:                is_nothrow_move_assignable<allocator_type>::value) ||
        -:  394:               !__alloc_traits::propagate_on_container_move_assignment::value)
        -:  395:{
        -:  396:    clear();
        -:  397:    shrink_to_fit();
        -:  398:    __first_ = __c.__first_;
        -:  399:    __begin_ = __c.__begin_;
        -:  400:    __end_ = __c.__end_;
        -:  401:    __end_cap() = __c.__end_cap();
        -:  402:    __move_assign_alloc(__c,
        -:  403:        integral_constant<bool,
        -:  404:                          __alloc_traits::propagate_on_container_move_assignment::value>());
        -:  405:    __c.__first_ = __c.__begin_ = __c.__end_ = __c.__end_cap() = nullptr;
        -:  406:    return *this;
        -:  407:}
        -:  408:
        -:  409:template <class _Tp, class _Allocator>
        -:  410:void
        -:  411:__split_buffer<_Tp, _Allocator>::swap(__split_buffer& __x)
        -:  412:        _NOEXCEPT_(!__alloc_traits::propagate_on_container_swap::value||
        -:  413:                   __is_nothrow_swappable<__alloc_rr>::value)
        -:  414:{
        -:  415:    _VSTD::swap(__first_, __x.__first_);
        -:  416:    _VSTD::swap(__begin_, __x.__begin_);
        -:  417:    _VSTD::swap(__end_, __x.__end_);
        -:  418:    _VSTD::swap(__end_cap(), __x.__end_cap());
        -:  419:    _VSTD::__swap_allocator(__alloc(), __x.__alloc());
        -:  420:}
        -:  421:
        -:  422:template <class _Tp, class _Allocator>
        -:  423:void
        -:  424:__split_buffer<_Tp, _Allocator>::reserve(size_type __n)
        -:  425:{
        -:  426:    if (__n < capacity())
        -:  427:    {
        -:  428:        __split_buffer<value_type, __alloc_rr&> __t(__n, 0, __alloc());
        -:  429:        __t.__construct_at_end(move_iterator<pointer>(__begin_),
        -:  430:                               move_iterator<pointer>(__end_));
        -:  431:        _VSTD::swap(__first_, __t.__first_);
        -:  432:        _VSTD::swap(__begin_, __t.__begin_);
        -:  433:        _VSTD::swap(__end_, __t.__end_);
        -:  434:        _VSTD::swap(__end_cap(), __t.__end_cap());
        -:  435:    }
        -:  436:}
        -:  437:
        -:  438:template <class _Tp, class _Allocator>
        -:  439:void
        -:  440:__split_buffer<_Tp, _Allocator>::shrink_to_fit() _NOEXCEPT
        -:  441:{
        -:  442:    if (capacity() > size())
        -:  443:    {
        -:  444:#ifndef _LIBCPP_NO_EXCEPTIONS
        -:  445:        try
        -:  446:        {
        -:  447:#endif  // _LIBCPP_NO_EXCEPTIONS
        -:  448:            __split_buffer<value_type, __alloc_rr&> __t(size(), 0, __alloc());
        -:  449:            __t.__construct_at_end(move_iterator<pointer>(__begin_),
        -:  450:                                   move_iterator<pointer>(__end_));
        -:  451:            __t.__end_ = __t.__begin_ + (__end_ - __begin_);
        -:  452:            _VSTD::swap(__first_, __t.__first_);
        -:  453:            _VSTD::swap(__begin_, __t.__begin_);
        -:  454:            _VSTD::swap(__end_, __t.__end_);
        -:  455:            _VSTD::swap(__end_cap(), __t.__end_cap());
        -:  456:#ifndef _LIBCPP_NO_EXCEPTIONS
        -:  457:        }
        -:  458:        catch (...)
        -:  459:        {
        -:  460:        }
        -:  461:#endif  // _LIBCPP_NO_EXCEPTIONS
        -:  462:    }
        -:  463:}
        -:  464:
        -:  465:template <class _Tp, class _Allocator>
        -:  466:void
        -:  467:__split_buffer<_Tp, _Allocator>::push_front(const_reference __x)
        -:  468:{
        -:  469:    if (__begin_ == __first_)
        -:  470:    {
        -:  471:        if (__end_ < __end_cap())
        -:  472:        {
        -:  473:            difference_type __d = __end_cap() - __end_;
        -:  474:            __d = (__d + 1) / 2;
        -:  475:            __begin_ = _VSTD::move_backward(__begin_, __end_, __end_ + __d);
        -:  476:            __end_ += __d;
        -:  477:        }
        -:  478:        else
        -:  479:        {
        -:  480:            size_type __c = max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);
        -:  481:            __split_buffer<value_type, __alloc_rr&> __t(__c, (__c + 3) / 4, __alloc());
        -:  482:            __t.__construct_at_end(move_iterator<pointer>(__begin_),
        -:  483:                                   move_iterator<pointer>(__end_));
        -:  484:            _VSTD::swap(__first_, __t.__first_);
        -:  485:            _VSTD::swap(__begin_, __t.__begin_);
        -:  486:            _VSTD::swap(__end_, __t.__end_);
        -:  487:            _VSTD::swap(__end_cap(), __t.__end_cap());
        -:  488:        }
        -:  489:    }
        -:  490:    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__begin_-1), __x);
        -:  491:    --__begin_;
        -:  492:}
        -:  493:
        -:  494:template <class _Tp, class _Allocator>
        -:  495:void
        -:  496:__split_buffer<_Tp, _Allocator>::push_front(value_type&& __x)
        -:  497:{
        -:  498:    if (__begin_ == __first_)
        -:  499:    {
        -:  500:        if (__end_ < __end_cap())
        -:  501:        {
        -:  502:            difference_type __d = __end_cap() - __end_;
        -:  503:            __d = (__d + 1) / 2;
        -:  504:            __begin_ = _VSTD::move_backward(__begin_, __end_, __end_ + __d);
        -:  505:            __end_ += __d;
        -:  506:        }
        -:  507:        else
        -:  508:        {
        -:  509:            size_type __c = max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);
        -:  510:            __split_buffer<value_type, __alloc_rr&> __t(__c, (__c + 3) / 4, __alloc());
        -:  511:            __t.__construct_at_end(move_iterator<pointer>(__begin_),
        -:  512:                                   move_iterator<pointer>(__end_));
        -:  513:            _VSTD::swap(__first_, __t.__first_);
        -:  514:            _VSTD::swap(__begin_, __t.__begin_);
        -:  515:            _VSTD::swap(__end_, __t.__end_);
        -:  516:            _VSTD::swap(__end_cap(), __t.__end_cap());
        -:  517:        }
        -:  518:    }
        -:  519:    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__begin_-1),
        -:  520:            _VSTD::move(__x));
        -:  521:    --__begin_;
        -:  522:}
        -:  523:
        -:  524:template <class _Tp, class _Allocator>
        -:  525:inline _LIBCPP_INLINE_VISIBILITY
        -:  526:void
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE9push_backERKS3_ called 0 returned 0% blocks executed 0%
    #####:  527:__split_buffer<_Tp, _Allocator>::push_back(const_reference __x)
        -:  528:{
    #####:  529:    if (__end_ == __end_cap())
    $$$$$:  529-block  0
    $$$$$:  529-block  1
        -:  530:    {
    #####:  531:        if (__begin_ > __first_)
    $$$$$:  531-block  0
branch  0 never executed
branch  1 never executed
        -:  532:        {
    #####:  533:            difference_type __d = __begin_ - __first_;
    #####:  534:            __d = (__d + 1) / 2;
    #####:  535:            __end_ = _VSTD::move(__begin_, __end_, __begin_ - __d);
    #####:  536:            __begin_ -= __d;
    #####:  537:        }
    $$$$$:  537-block  0
        -:  538:        else
        -:  539:        {
    #####:  540:            size_type __c = max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);
    #####:  541:            __split_buffer<value_type, __alloc_rr&> __t(__c, __c / 4, __alloc());
    #####:  542:            __t.__construct_at_end(move_iterator<pointer>(__begin_),
    $$$$$:  542-block  0
    $$$$$:  542-block  1
    #####:  543:                                   move_iterator<pointer>(__end_));
    $$$$$:  543-block  0
    #####:  544:            _VSTD::swap(__first_, __t.__first_);
    #####:  545:            _VSTD::swap(__begin_, __t.__begin_);
    #####:  546:            _VSTD::swap(__end_, __t.__end_);
    #####:  547:            _VSTD::swap(__end_cap(), __t.__end_cap());
    #####:  548:        }
    $$$$$:  548-block  0
    $$$$$:  548-block  1
    $$$$$:  548-block  2
    #####:  549:    }
    $$$$$:  549-block  0
    #####:  550:    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__end_), __x);
    #####:  551:    ++__end_;
    #####:  552:}
    $$$$$:  552-block  0
        -:  553:
        -:  554:template <class _Tp, class _Allocator>
        -:  555:void
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE9push_backEOS6_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE9push_backEOS1_ called 0 returned 0% blocks executed 0%
    #####:  556:__split_buffer<_Tp, _Allocator>::push_back(value_type&& __x)
        -:  557:{
    #####:  558:    if (__end_ == __end_cap())
    $$$$$:  558-block  0
    $$$$$:  558-block  1
    $$$$$:  558-block  2
    $$$$$:  558-block  3
        -:  559:    {
    #####:  560:        if (__begin_ > __first_)
    $$$$$:  560-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  560-block  1
branch  2 never executed
branch  3 never executed
        -:  561:        {
    #####:  562:            difference_type __d = __begin_ - __first_;
    #####:  563:            __d = (__d + 1) / 2;
    #####:  564:            __end_ = _VSTD::move(__begin_, __end_, __begin_ - __d);
    #####:  565:            __begin_ -= __d;
    #####:  566:        }
    $$$$$:  566-block  0
    $$$$$:  566-block  1
        -:  567:        else
        -:  568:        {
    #####:  569:            size_type __c = max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);
    #####:  570:            __split_buffer<value_type, __alloc_rr&> __t(__c, __c / 4, __alloc());
    #####:  571:            __t.__construct_at_end(move_iterator<pointer>(__begin_),
    $$$$$:  571-block  0
    $$$$$:  571-block  1
    $$$$$:  571-block  2
    $$$$$:  571-block  3
    #####:  572:                                   move_iterator<pointer>(__end_));
    $$$$$:  572-block  0
    $$$$$:  572-block  1
    #####:  573:            _VSTD::swap(__first_, __t.__first_);
    #####:  574:            _VSTD::swap(__begin_, __t.__begin_);
    #####:  575:            _VSTD::swap(__end_, __t.__end_);
    #####:  576:            _VSTD::swap(__end_cap(), __t.__end_cap());
    #####:  577:        }
    $$$$$:  577-block  0
    $$$$$:  577-block  1
    $$$$$:  577-block  2
    $$$$$:  577-block  3
    $$$$$:  577-block  4
    $$$$$:  577-block  5
    #####:  578:    }
    $$$$$:  578-block  0
    $$$$$:  578-block  1
    #####:  579:    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__end_),
    #####:  580:            _VSTD::move(__x));
    #####:  581:    ++__end_;
    #####:  582:}
    $$$$$:  582-block  0
    $$$$$:  582-block  1
        -:  583:
        -:  584:template <class _Tp, class _Allocator>
        -:  585:template <class... _Args>
        -:  586:void
        -:  587:__split_buffer<_Tp, _Allocator>::emplace_back(_Args&&... __args)
        -:  588:{
        -:  589:    if (__end_ == __end_cap())
        -:  590:    {
        -:  591:        if (__begin_ > __first_)
        -:  592:        {
        -:  593:            difference_type __d = __begin_ - __first_;
        -:  594:            __d = (__d + 1) / 2;
        -:  595:            __end_ = _VSTD::move(__begin_, __end_, __begin_ - __d);
        -:  596:            __begin_ -= __d;
        -:  597:        }
        -:  598:        else
        -:  599:        {
        -:  600:            size_type __c = max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);
        -:  601:            __split_buffer<value_type, __alloc_rr&> __t(__c, __c / 4, __alloc());
        -:  602:            __t.__construct_at_end(move_iterator<pointer>(__begin_),
        -:  603:                                   move_iterator<pointer>(__end_));
        -:  604:            _VSTD::swap(__first_, __t.__first_);
        -:  605:            _VSTD::swap(__begin_, __t.__begin_);
        -:  606:            _VSTD::swap(__end_, __t.__end_);
        -:  607:            _VSTD::swap(__end_cap(), __t.__end_cap());
        -:  608:        }
        -:  609:    }
        -:  610:    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__end_),
        -:  611:                              _VSTD::forward<_Args>(__args)...);
        -:  612:    ++__end_;
        -:  613:}
        -:  614:
        -:  615:template <class _Tp, class _Allocator>
        -:  616:inline _LIBCPP_INLINE_VISIBILITY
        -:  617:void
        -:  618:swap(__split_buffer<_Tp, _Allocator>& __x, __split_buffer<_Tp, _Allocator>& __y)
        -:  619:        _NOEXCEPT_(_NOEXCEPT_(__x.swap(__y)))
        -:  620:{
        -:  621:    __x.swap(__y);
        -:  622:}
        -:  623:
        -:  624:_LIBCPP_END_NAMESPACE_STD
        -:  625:
        -:  626:_LIBCPP_POP_MACROS
        -:  627:
        -:  628:#endif  // _LIBCPP_SPLIT_BUFFER
